/********************************************************************************/
/* This code and its associated files were created at the instruction of        */
/* professors at the University of Texas at San Antonio during my time as a     */
/* student at the university. I, Matthew Thomas Beck, can confirm that myself   */
/* and any project partners (if applicable) were the ones responsible for       */
/* writing it.                                                                  */
/********************************************************************************/





/************************************************************/
/*************** IMPORT / CREATE DEPENDENCIES ***************/
/************************************************************/


/********** IMPORT DEPENDENCIES **********/

package com.example.coursecomrade
import android.content.Intent
import android.os.Bundle
import android.view.MenuItem
import android.view.View
import android.widget.ImageButton
import android.widget.PopupMenu
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import java.io.BufferedReader
import java.io.InputStreamReader
import androidx.appcompat.widget.Toolbar


/*******************************************************/
/*************** ClassesActivity.kt JAVA ***************/
/*******************************************************/


/********** CLASSES ACTIVITY CLASS **********/

class ClassesActivity : AppCompatActivity() {

    /***** set variables *****/

    private lateinit var classesRecyclerView: RecyclerView
    private lateinit var buttonProfile: ImageButton
    private lateinit var toolbarTitle: TextView
    private val classList = mutableListOf<ClassData>()


    /********** CREATE PAGE **********/

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_classes)

        // Toolbar setup
        val toolbar: Toolbar = findViewById(R.id.toolbar)
        setSupportActionBar(toolbar)
        toolbar.navigationIcon = getDrawable(R.drawable.baseline_arrow_back_24)
        toolbar.setNavigationOnClickListener { onBackPressed() }

        // Profile button and title
        buttonProfile = findViewById(R.id.buttonProfile)
        toolbarTitle = toolbar.findViewById(R.id.toolbarTitle)
        toolbarTitle.text = "Classes"
        buttonProfile.setOnClickListener { showProfileOptions(it) }

        // RecyclerView setup
        classesRecyclerView = findViewById(R.id.classesRecyclerView)
        classesRecyclerView.layoutManager = LinearLayoutManager(this)

        loadClasses()
        classesRecyclerView.adapter = ClassAdapter(this, classList)
    }

    /********** PROFILE TAB **********/

    /********** PROFILE TAB **********/
    private fun showProfileOptions(view: View) {
        val popupMenu = PopupMenu(this, view)
        popupMenu.menuInflater.inflate(R.menu.profile_menu, popupMenu.menu)

        popupMenu.setOnMenuItemClickListener { item: MenuItem ->
            when (item.itemId) {
                R.id.menu_profile -> {
                    toolbarTitle.text = "Profile"
                    val intent = Intent(this, ProfileActivity::class.java)
                    startActivity(intent)
                    true
                }
                R.id.menu_logout -> {
                    // Logout user and redirect to LoginActivity
                    logoutUser()
                    true
                }
                else -> false
            }
        }

        popupMenu.show()
    }

    /********** PROFILE TAB **********/
    private fun logoutUser() {
        // Clear the login state
        val sharedPreferences = getSharedPreferences("user_prefs", MODE_PRIVATE)
        val editor = sharedPreferences.edit()
        editor.putBoolean("is_logged_in", false)
        editor.apply()

        // Show a Toast message
        Toast.makeText(this, "Logged out successfully", Toast.LENGTH_SHORT).show()

        // Redirect to LoginActivity
        val intent = Intent(this, LoginActivity::class.java)
        startActivity(intent)
        finish() // Finish MainActivity to prevent the user from navigating back
    }

    private fun loadClasses() {
        val inputStream = assets.open("classes.csv")
        val reader = BufferedReader(InputStreamReader(inputStream))
        reader.readLine() // Skip header
        var line: String?
        while (reader.readLine().also { line = it } != null) {
            val tokens = line!!.split(",").map { it.trim() }
            if (tokens.size >= 4) {
                classList.add(
                    ClassData(
                        tokens[0],
                        tokens[1],
                        tokens[2],
                        tokens[5]
                    )
                )
            }
        }
        reader.close()
    }
}
