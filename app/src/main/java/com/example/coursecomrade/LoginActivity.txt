package com.example.coursecomrade

import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import java.io.BufferedReader
import java.io.File
import java.io.InputStreamReader

class LoginActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_login)

        val usernameInput: EditText = findViewById(R.id.editTextUsername)
        val passwordInput: EditText = findViewById(R.id.editTextPassword)
        val loginButton: Button = findViewById(R.id.buttonLogin)
        val createAccountButton: Button = findViewById(R.id.buttonCreateAccount)

        // Ensure `users.csv` exists in filesDir
        initializeUsersFile()

        loginButton.setOnClickListener {
            val username = usernameInput.text.toString().trim()
            val password = passwordInput.text.toString().trim()
            loginUser(username, password)
        }

        createAccountButton.setOnClickListener {
            val username = usernameInput.text.toString().trim()
            val password = passwordInput.text.toString().trim()

            if (username.isEmpty() || password.isEmpty()) {
                Toast.makeText(this, "Please enter a username and password", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }

            if (createAccount(username, password)) {
                Toast.makeText(this, "Account Created Successfully", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "Username already exists", Toast.LENGTH_SHORT).show()
            }
        }
    }

    private fun initializeUsersFile() {
        val file = File(filesDir, "users.csv")
        if (!file.exists()) {
            // Create file with a default header
            try {
                file.writeText("username,password\n")
                Log.d("FileInit", "users.csv created in filesDir")
            } catch (e: Exception) {
                Log.e("FileError", "Error initializing users.csv: ${e.message}")
            }
        }
    }

    private fun checkCredentials(username: String, password: String): Boolean {
        try {
            val file = File(filesDir, "users.csv")
            if (!file.exists()) return false

            val reader = file.bufferedReader()
            reader.readLine() // Skip header
            var line: String?
            while (reader.readLine().also { line = it } != null) {
                val tokens = line!!.split(",").map { it.trim() }
                if (tokens.size == 2 && tokens[0] == username && tokens[1] == password) {
                    // Save username in SharedPreferences
                    val sharedPreferences = getSharedPreferences("user_prefs", MODE_PRIVATE)
                    val editor = sharedPreferences.edit()
                    editor.putBoolean("is_logged_in", true)
                    editor.putString("logged_in_user", username)
                    editor.apply()
                    return true
                }
            }
            reader.close()
        } catch (e: Exception) {
            Log.e("CSVError", "Error checking credentials: ${e.message}")
        }
        return false
    }


    private fun createAccount(username: String, password: String): Boolean {
        val file = File(filesDir, "users.csv")
        if (!file.exists()) {
            initializeUsersFile()
        }

        try {
            val existingUsers = file.readLines().drop(1) // Skip header
            if (existingUsers.any { it.split(",")[0] == username }) {
                return false // Username already exists
            }

            // Append new account
            file.appendText("$username,$password\n")
        } catch (e: Exception) {
            Log.e("AccountError", "Error creating account: ${e.message}")
            return false
        }
        return true
    }

    private fun loginUser(username: String, password: String) {
        if (checkCredentials(username, password)) {
            // Save login state in SharedPreferences
            val sharedPreferences = getSharedPreferences("user_prefs", MODE_PRIVATE)
            val editor = sharedPreferences.edit()
            editor.putBoolean("is_logged_in", true)
            editor.apply()

            Toast.makeText(this, "Login Successful", Toast.LENGTH_SHORT).show()
            val intent = Intent(this, MainActivity::class.java)
            startActivity(intent)
            finish()
        } else {
            Toast.makeText(this, "Invalid username or password", Toast.LENGTH_SHORT).show()
        }
    }

    private fun logoutUser() {
        val sharedPreferences = getSharedPreferences("user_prefs", MODE_PRIVATE)
        val editor = sharedPreferences.edit()
        editor.putBoolean("is_logged_in", false)
        editor.apply()

        val intent = Intent(this, LoginActivity::class.java)
        startActivity(intent)
        finish()
    }
}
