/********************************************************************************/
/* This code and its associated files were created at the instruction of        */
/* professors at the University of Texas at San Antonio during my time as a     */
/* student at the university. I, Matthew Thomas Beck, can confirm that myself   */
/* and any project partners (if applicable) were the ones responsible for       */
/* writing it.                                                                  */
/********************************************************************************/

package com.example.coursecomrade

import android.content.Intent
import android.os.Bundle
import android.view.MenuItem
import android.view.View
import android.widget.ImageButton
import android.widget.PopupMenu
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.widget.Toolbar

class MainActivity : AppCompatActivity() {

    /***** set variables *****/
    private lateinit var buttonProfile: ImageButton
    private lateinit var degreeMap: TextView
    private lateinit var classes: TextView
    private lateinit var professors: TextView
    private lateinit var backupButton: TextView
    private lateinit var toolbar: Toolbar
    private lateinit var toolbarTitle: TextView


    /********** CREATE PAGE **********/
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // Check login state
        val sharedPreferences = getSharedPreferences("user_prefs", MODE_PRIVATE)
        val isLoggedIn = sharedPreferences.getBoolean("is_logged_in", false)

        if (!isLoggedIn) {
            // Redirect to LoginActivity if not logged in
            val intent = Intent(this, LoginActivity::class.java)
            startActivity(intent)
            finish() // Prevent returning to MainActivity without logging in
            return
        }

        // Load the main layout if the user is logged in
        setContentView(R.layout.activity_main)

        toolbar = findViewById(R.id.toolbar)
        toolbarTitle = toolbar.findViewById(R.id.toolbarTitle)

        supportActionBar?.hide()

        buttonProfile = findViewById(R.id.buttonProfile)
        degreeMap = findViewById(R.id.degreeMap)
        classes = findViewById(R.id.classes)
        professors = findViewById(R.id.professors)
        backupButton = findViewById(R.id.backupButton)

        toolbarTitle.text = "Home"

        buttonProfile.setOnClickListener {
            showProfileOptions(it)
        }

        degreeMap.setOnClickListener {
            val intent = Intent(this, DegreeMapActivity::class.java)
            startActivity(intent)
        }

        classes.setOnClickListener {
            val intent = Intent(this, ClassesActivity::class.java)
            startActivity(intent)
        }

        professors.setOnClickListener {
            val intent = Intent(this, ProfessorsActivity::class.java)
            startActivity(intent)
        }

        backupButton.setOnClickListener {
            // TODO: Implement backup functionality
        }
    }

    /********** RESUME HOME PAGE **********/
    override fun onResume() {
        super.onResume()
        toolbarTitle.text = "Home"
    }

    /********** PROFILE TAB **********/
    private fun showProfileOptions(view: View) {
        val popupMenu = PopupMenu(this, view)
        popupMenu.menuInflater.inflate(R.menu.profile_menu, popupMenu.menu)

        popupMenu.setOnMenuItemClickListener { item: MenuItem ->
            when (item.itemId) {
                R.id.menu_profile -> {
                    toolbarTitle.text = "Profile"
                    val intent = Intent(this, ProfileActivity::class.java)
                    startActivity(intent)
                    true
                }
                R.id.menu_logout -> {
                    // Logout user and redirect to LoginActivity
                    logoutUser()
                    true
                }
                else -> false
            }
        }

        popupMenu.show()
    }

    /********** PROFILE TAB **********/
    private fun logoutUser() {
        // Clear the login state
        val sharedPreferences = getSharedPreferences("user_prefs", MODE_PRIVATE)
        val editor = sharedPreferences.edit()
        editor.putBoolean("is_logged_in", false)
        editor.apply()

        // Show a Toast message
        Toast.makeText(this, "Logged out successfully", Toast.LENGTH_SHORT).show()

        // Redirect to LoginActivity
        val intent = Intent(this, LoginActivity::class.java)
        startActivity(intent)
        finish() // Finish MainActivity to prevent the user from navigating back
    }
}
