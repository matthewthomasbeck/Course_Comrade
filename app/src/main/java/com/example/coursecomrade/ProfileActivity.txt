package com.example.coursecomrade

import android.content.Context
import android.os.Bundle
import android.util.Log
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import java.io.File

class ProfileActivity : AppCompatActivity() {

    private lateinit var profileInfo: TextView
    private lateinit var oldPasswordInput: EditText
    private lateinit var newPasswordInput: EditText
    private lateinit var confirmButton: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_profile)

        profileInfo = findViewById(R.id.profileInfo)
        oldPasswordInput = findViewById(R.id.oldPasswordInput)
        newPasswordInput = findViewById(R.id.newPasswordInput)
        confirmButton = findViewById(R.id.confirmButton)

        // Get the logged-in username from SharedPreferences
        val sharedPreferences = getSharedPreferences("user_prefs", Context.MODE_PRIVATE)
        val username = sharedPreferences.getString("logged_in_user", "Unknown")

        profileInfo.text = "Hello, $username"

        confirmButton.setOnClickListener {
            val oldPassword = oldPasswordInput.text.toString().trim()
            val newPassword = newPasswordInput.text.toString().trim()

            if (oldPassword.isEmpty() || newPassword.isEmpty()) {
                Toast.makeText(this, "Please fill in both fields", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }

            if (changePassword(username ?: "", oldPassword, newPassword)) {
                Toast.makeText(this, "Password changed successfully", Toast.LENGTH_SHORT).show()
                finish()
            } else {
                Toast.makeText(this, "Old password is incorrect", Toast.LENGTH_SHORT).show()
            }
        }
    }

    private fun changePassword(username: String, oldPassword: String, newPassword: String): Boolean {
        val file = File(filesDir, "users.csv")
        if (!file.exists()) {
            Log.e("ProfileActivity", "Users file not found")
            return false
        }

        try {
            val lines = file.readLines().toMutableList()
            val header = lines[0] // Preserve header line
            val updatedLines = mutableListOf(header)

            var passwordChanged = false

            for (line in lines.drop(1)) {
                val tokens = line.split(",")
                if (tokens.size == 2 && tokens[0] == username) {
                    if (tokens[1] == oldPassword) {
                        updatedLines.add("$username,$newPassword")
                        passwordChanged = true
                    } else {
                        updatedLines.add(line)
                    }
                } else {
                    updatedLines.add(line)
                }
            }

            if (passwordChanged) {
                file.writeText(updatedLines.joinToString("\n"))
                return true
            }
        } catch (e: Exception) {
            Log.e("ProfileActivity", "Error changing password: ${e.message}")
        }

        return false
    }
}
